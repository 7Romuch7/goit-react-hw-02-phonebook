{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","App.js","index.js"],"names":["module","exports","ContactForm","state","name","number","nameInputId","shortid","generate","numberInputId","handleChange","event","console","log","currentTarget","value","setState","handleSubmit","preventDefault","double","props","contacts","filter","contact","target","elements","length","alert","onSubmit","clear","className","styles","form","this","labelForm","htmlFor","inputForm","type","placeholder","id","onChange","btnForm","Component","ContactListItem","onRemove","contactListItem","onClick","defaultProps","ContactList","onRemoveContact","listContacts","map","Filter","onChangeFilter","titleFilter","inputFilter","e","App","formHandleSubmit","data","prevState","filteredName","toLowerCase","includes","changeFilter","removedContact","contactId","title","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8d7ccaa2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__MDrA1\",\"labelForm\":\"ContactForm_labelForm__3gkGo\",\"inputForm\":\"ContactForm_inputForm__2NCpQ\",\"btnForm\":\"ContactForm_btnForm__3z7jk\"};","import { Component } from 'react';\r\nimport shortid from 'shortid';\r\nimport styles from '../ContactForm/ContactForm.module.css';\r\n\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: ''\r\n  };\r\n    \r\n  nameInputId = shortid.generate();\r\n  numberInputId = shortid.generate();\r\n    \r\n  handleChange = event => {\r\n    console.log(event.currentTarget);\r\n    const { name, value } = event.currentTarget;\r\n    this.setState = ({ [name]: value });\r\n  };\r\n    \r\n  handleSubmit = event => {\r\n      event.preventDefault();\r\n\r\n      const double = this.props.contacts.filter(\r\n      contact => contact.name === event.target.elements[0].value,\r\n    );\r\n    if (double.length) {\r\n      return alert(`${double[0].name} is already in contacts`);\r\n    }\r\n      \r\n      this.props.onSubmit(this.state);\r\n      this.clear();\r\n    }\r\n    \r\n  clear = () => {\r\n    this.setState({name: '', number: ''})\r\n  }\r\n    \r\n  render() {\r\n    return (<form className={styles.form} onSubmit={this.handleSubmit}>\r\n            <label className={styles.labelForm} htmlFor={this.nameInputId}>\r\n                Name\r\n                <input className={styles.inputForm}\r\n                    type=\"text\"                    \r\n                    value={this.state.name}\r\n                    placeholder=\"Enter Name\"\r\n                    id={this.nameInputId}\r\n                    onChange={this.handleChange}\r\n                />\r\n            </label>\r\n            <label className={styles.labelForm} htmlFor={this.numberInputId}>\r\n                Number\r\n                <input className={styles.inputForm}\r\n                    type=\"tel\"\r\n                    value={this.state.number}\r\n                    placeholder=\"Enter number\"\r\n                    id={this.numberInputId}\r\n                    onChange={this.handleChange}\r\n                />\r\n            </label>\r\n\r\n            <button className={styles.btnForm} type=\"submit\">Add contact</button>\r\n        </form>\r\n    )}\r\n}\r\n\r\nexport default ContactForm;","import PropTypes from 'prop-types';\r\nimport styles from '../ContactListItem/ContactListItem.module.css';\r\n\r\nconst ContactListItem = ({ id, name, number, onRemove }) => (\r\n  <li key={id} className={styles.contactListItem}>\r\n    <p className={styles.contactListItem}>{name} </p>\r\n    <p className={styles.contactListItem}>{number}</p>\r\n    <div className={styles.contactListItem}>\r\n      <button type=\"button\" className={styles.contactListItem} onClick={onRemove}>\r\n        Delete\r\n      </button>\r\n    </div>\r\n  </li>\r\n);\r\n\r\nContactListItem.defaultProps = {\r\n  name: '',\r\n  number: ''\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.string.isRequired,\r\n  onRemove: PropTypes.func,\r\n};\r\n\r\nexport default ContactListItem;","import PropTypes from 'prop-types';\r\nimport ContactListItem from '../ContactListItem/ContactListItem';\r\nimport styles from '../ContactList/ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onRemoveContact }) => (\r\n    <ul className={styles.listContacts}>\r\n        {contacts.map(({ id, name, number }) => (\r\n      <ContactListItem\r\n        key={id}\r\n        id={id}\r\n        name={name}\r\n        number={number}\r\n        onRemove={() => onRemoveContact(id)}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.array.isRequired,\r\n  onRemoveContact: PropTypes.func,\r\n};\r\n\r\nexport default ContactList;","import PropTypes from 'prop-types';\r\nimport styles from '../Filter/Filter.module.css';\r\n\r\nexport default function Filter({ name, onChangeFilter }) {\r\n  return (\r\n    <div>\r\n      <label className={styles.titleFilter}>\r\n        Find contact by name\r\n        <input\r\n          type=\"text\"\r\n          className={styles.inputFilter}\r\n          value={name}\r\n          onChange={e => onChangeFilter(e.target.value)}\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n}\r\n\r\nFilter.defaultProps = {\r\n  value: 'noName',\r\n  number: '123 45 67',\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n\r\n  onChangeFilter: PropTypes.func,\r\n};","import { Component } from 'react';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\nimport styles from '../src/Title.module.css';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n      {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n      {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n      {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n    ],\n    filter: ''\n  }\n\n  formHandleSubmit = data => {\n    const contact = {\n      name: data.name,\n      number: data.number,\n    };\n\n    this.setState(prevState => {\n      return {\n        contacts: [...prevState.contacts, contact],\n      };\n    });\n  };\n  \n  filteredName = () => {\n    const { contacts, filter } = this.state;\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  changeFilter = filter => {\n    this.setState({ filter });\n  };\n\n  removedContact = contactId => {\n    this.setState(prevState => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== contactId),\n      };\n    });\n  };\n\n  render() {\n    const { filter } = this.state;\n\n    return (\n      <> <h1 className={styles.title}>Phonebook</h1>\n        <ContactForm onSubmit={this.formHandleSubmit}\n        contacts={this.state.contacts} />\n        \n        <h2 className={styles.title}>Contacts</h2>\n        <Filter value={filter} onChangeFilter={this.changeFilter} />\n        <ContactList\n          contacts={this.filteredName()}\n          onRemoveContact={this.removedContact} />\n      </>\n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}